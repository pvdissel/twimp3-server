ext {
    libraries = [:]
    versions = [:]
}

versions += [
        groovy: '2.2.1',
        dropwizard: '0.6.2',
        jersey: '1.18',
        jetty: '8.1.10.v20130312',
]

libraries += [
        groovy: "org.codehaus.groovy:groovy:${versions.groovy}",
        groovyJson: "org.codehaus.groovy:groovy-json:${versions.groovy}",
        jodaTime: 'joda-time:joda-time:2.3',

        junit: 'junit:junit:4.11',
        asm: 'org.ow2.asm:asm:4.2',
        hamcrest: 'org.hamcrest:hamcrest-library:1.3',
        dropwizardTesting: "com.yammer.dropwizard:dropwizard-testing:${versions.dropwizard}",
]

libraries.dropwizard = ["com.yammer.dropwizard:dropwizard-core:${versions.dropwizard}",
        "org.eclipse.jetty:jetty-servlets:${versions.jetty}", // Required for CrossOriginFilter.class
        "com.sun.jersey:jersey-client:${versions.jersey}",  // org.glassfish.jersey.core:jersey-client:2.5
]

libraries.spock = ['org.spockframework:spock-core:0.7-groovy-2.0',
        libraries.groovy,
        'org.objenesis:objenesis:2.0', // 2.1
        'cglib:cglib-nodep:2.2'   // 3.1
]

allprojects {
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def req = details.requested
            // Replace groovy-all with groovy
            if (req.name == 'groovy-all' || req.name == 'groovy') {
                details.useTarget libraries.groovy
            }
            // Replace junit-dep with junit
            if (req.name == 'junit-dep') {
                details.useTarget libraries.junit
            }
            // Change old groupId of asm to new groupId, for correct dependency handling
            if (req.group == 'asm') {
                details.useTarget group: 'org.ow2.asm', name: req.name, version: req.version
            }
            // Change all jersey version, to the given version
            if (req.group == 'com.sun.jersey') {
                details.useTarget group: req.group, name: req.name, version: versions.jersey
            }
        }
    }
}
